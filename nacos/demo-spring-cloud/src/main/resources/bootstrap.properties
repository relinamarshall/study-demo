server.port=8081
# 启动会拉去 test 的配置
spring.application.name=test
#spring.cloud.nacos.config.server-addr=127.0.0.1:8848

# 拉去策略 优先级
#spring.application.name-spring.profiles.active.properties
#spring.application.name.properties
#spring.application.name
spring.profiles.active=dev

# 拉去多个配置文件 优先级：下标越大的优先级越高
# nacos设计意义 shared-configs公用的 extension-configs就单独这个项目用到的  功能是一样的含义不同 refresh默认都是false
spring.cloud.nacos.config.shared-configs[0].data-id=commons.properties
# 开启自动刷新,别忘了还需要配合RefreshScope
# RefreshScope 作用是虽然你的配置项值发生了改变，但是bean中并没有变化，所以需要重新生成一个值变化后的bean，重新创建的bean就会拿到最新配置
spring.cloud.nacos.config.shared-configs[0].refresh=true
#spring.cloud.nacos.config.extension-configs[0].data-id=commons.properties
#spring.cloud.nacos.config.shared-configs[0].refresh=true
# file-extension 会将配置文件转为所配的文件类型 相当于是一种约束
spring.cloud.nacos.config.shared-configs[0].file-extension=properties

# 优先级
# 主配置 > extension-configs > shared-configs

# 服务注册 config.server-addr也可以  discovery.server-addr只是为了区分
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# 权重
spring.cloud.nacos.discovery.weight=100

# 临时实例改为持久化实例 如果原本是临时的不允许修改为持久化实例，需删除文件E:\nacos\data\protocol\raft\naming_instance_metadata
# 非临时实例 实例下线还有记录，就会持久化了
spring.cloud.nacos.discovery.ephemeral=false

# 配置集群
spring.cloud.nacos.discovery.cluster-name=beijing
